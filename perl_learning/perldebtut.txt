Perl デバッガ チュートリアル
http://perldoc.jp/docs/perl/5.10.0/perldebtut.pod

#// Perl の文法チェック

---
perl -c programfiles
programfiles syntax ok
---

#// デバッガで利用するコード

---
#!/usr/bin/perl
use strict;

my $key = 'wilcome';
my %data = (
      'this' => qw(that),
      'tom'  => qw(and jerry),
      'welcome' => q(Hello World),
      'zip'  => q(welcome),
);
my @data = keys %data;

print "All OK\n" if grep($key, keys %data);
print "$data{$key}\n";
print "done: '$data{$key}'\n";
exit;
---

#// デバッガを終了する

---
>q
---

#// ヘルプを表示する

簡易ヘルプ
---
>h
---

簡易ヘルプをページャ (more や less) に渡す
---
>|h
---

ヘルプ
---
>h h
---

ヘルプをページャに渡す
---
>|h h
---

つまり「 | 」は、デバッガコマンドの結果をページャに渡す。

#// 読み込まれたモジュールとバージョン番号を表示する

---
>M
---

#// 読み込まれたメソッドを表示する

---
>m
---

#// すべてのサブルーチンを表示する

---
>S
---

#// パッケージ内の変数をデータプリティプリンタで表示する

パッケージのを指定しない場合のデフォルトは main。デバッグをシングルステップで進めて別のパッケージ ( モジュール ) 内にいる場合は、当該モジュールがデフォルトになる。

---
>V
---

main 内の変数を指定する。例えば「 %ENV 」。指定する場合シジル ($, @ などの型識別子) は省く。

---
>V main ENV
---


パッケージ名 (モジュール名) を指定する。例えば「 File::Spec 」。

---
>V File::Spec
---

パッケージ ( モジュール )「 File::Spec 」のスカラ変数「 $VERSION 」を指定する。

---
>V File::Spec VERSION
---

「 X 」は、「 V 」のパッケージ名を指定しないコマンド。パッケージ名はデフォルトが自動的に選択される。

---
>X
---

変数を指定する。

---
>X INC
---

#// 現在の行周辺のコードを確認する。

---
>v
---

「 v 」を押下するたびに次のコードを表示する。

#// 任意の行を確認する

---
>l
---

#// 実行行に戻る

---
>.
---

#// 次に実行可能な文に進む

---
>s
---

#// 変数に格納された値を見る

---
>p $key
---

#// 1 回限りのブレークポイントを指定してそこに移動する

行で指定する。
---
>c 13
---

サブルーチンで指定する。
---
>c subroutine
---

パッケージ (モジュール) の中のサブルーチンを指定する。例えばモジュール「 File::Temp 」のサブルーチン「 tempfile 」を指定する。

---
>c File::Temp::tempfile
---

#// ハッシュ変数の中身を見る

データ構造へのリファレンスを利用すると中身がわかりやすい。

確認のためのプログラムコード内のハッシュ変数「 %data 」を確認すると次のように出力される。
---
>x \%data
0  HASH(0x8d8f58)
   'Hello World' => 'zip'
   'jerry' => 'welcome'
   'this' => 'that'
   'tom' => 'and'
   'welcome' => undef
---

「 x 」は、ネストしたリファレンスから完全なオブジェクト、オブジェクトの一部まで楽しくダンプする。

「 x 」は、数値 N で深度 ( maxdepth ) を指定可能。

---
>x 1 \%data
0  HASH(0x8d8f58)
---
---
>x 2 \%data
0  HASH(0x8d8f58)
   'Hello World' => 'zip'
   'jerry' => 'welcome'
   'this' => 'that'
   'tom' => 'and'
   'welcome' => undef
---

#// 簡単なオブジェクトを作る

簡単なオブジェクトを作って、見てみましょう ・・・


