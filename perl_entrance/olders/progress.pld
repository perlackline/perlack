
README
https://github.com/perl-entrance-org/Perl-Entrance-Textbook/blob/master/README.md

Perl入学式 #2
https://github.com/perl-entrance-org/workshop-2014-02/blob/master/slide.md

#// if/elsif/else

  + C の switch の代わりに if/elsif/else を使う。

#// scalar

  + 演算子 scalar を使えば配列の要素数が簡単に取得可能。

---
print scalar @array;
---
* スカラコンテキストであれば要素数を取得可能。
---
my $element = @array;
---

#// 配列の最後の index

  + 配列の最後の index を取得する。

---
my $last_indec = #@array;
---

#// 範囲演算子

  + 範囲演算子の値を逆順に格納したい場合は reverse を使う。

---
my @reverse = reverse (1..5);
---
  * 範囲演算子は大きい方を先に (5..1) とは書けない。

#// sort

  + 数値としてソート

---
sort { $a <=> $b }
---

  + 文字列としてソート

---
sort { $a cmp $b }
---

  (!) スカラ変数 $a と $b は sort で予約された変数名。
      他で利用はできない。

#// for ループ

  https://github.com/perl-entrance-org/workshop-2014-02/blob/master/slide.md#for-ループ

  + C 風 for ループを Perl で書く(結構便利)

---
for my $i (0 .. scalar @array -1) {
  print "array[$i]\n";
}
---

#// リファレンス

https://github.com/perl-entrance-org/workshop-2014-03/blob/master/slide.md#%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9%E3%81%A8%E3%81%AF

  + リファレンスは参照。

  + リファレンスは複雑なデータ構造を表現可能。

---
my $osaka = [ 'nqounet', 'boolfool' ];
my $tokyo = [ 'macopy', 'papix' ];
my @perl_entrance = ( $osaka, $tokyo );
print $perl_entrance[1][1];  # papix
---

#// リファレンスの使いどころ

  + 関数の引数に複数の配列やハッシュを渡す場合。

  + 直接配列やハッシュを引数で渡すとコピーされるので非効率になる場合になる。

  + リファレンスは参照渡しなので効率が良い。

#// リファレンスの例

  + シジルの前にバックスラッシュ \ を置くとリファレンスになる。

---
my $scalar     = 'scalar';
my $scalar_ref = \$scalar; # スカラのリファレンス

my @array      = qw( this is array );
my $array_ref  = \@array;  # 配列のリファレンス

my %hash       = ( this_is => 'hash' );
my $hash_ref   = \%hash;   # ハッシュのリファレンス
---

#// 簡単な書き方 (配列)

  + 無名の配列リファレンス

---
my $array_ref = [ 'This', 'is', 'array-ref' ];
---

#// 簡単な書き方 (ハッシュ)

  + 無名のハッシュリファレンス

---
my $hash_ref = { this => 'hash_ref' };
---

#// リファレンスをそのまま出力すると

  + 参照先のメモリアドレスが出力される。

  + このためリファレンスにはでリファレンスが必要。

#// デリファレンス

  + デリファレンスはリファレンスから実態を取り出す操作。

#// デリファレンスの例

  + シジル + $ でデリファレンス可能。

scalar
---
$$scalar_ref;
---

array
---
@$array_ref;
---

array element
---
${$array_ref}[1];
or
$array_ref->[1];  # more better
---

hash
---
%$hash_ref;
---

hash valeu
---
${$hash_ref}{key};
or
$hash_ref->{key}; # more better
---

#// Data::Dumper でリファレンスの中身を確認する

---
use Data:Dumper;

print Dumper($hash_ref);
---

result
---
$VAR1 = {
          'name'       => 'Kurt',
          'job'        => 'Guitarist',
          'affiliation => 'NIRVANA'
        };
---

... score.pl

https://github.com/perl-entrance-org/workshop-2014-03/blob/master/slide.md#練習問題-3
